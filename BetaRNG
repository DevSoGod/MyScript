repeat wait() until game:IsLoaded() and pcall(function() local _ = game.HttpGet end);
getgenv().HopServer=function()httprequest=(syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request ;if httprequest then local v1={};local v2=httprequest({Url=string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100",game.PlaceId)});local v3=game:GetService("HttpService"):JSONDecode(v2.Body);if (v3 and v3.data) then for v4,v5 in next,v3.data do if ((type(v5)=="table") and tonumber(v5.playing) and tonumber(v5.maxPlayers) and (v5.playing<(v5.maxPlayers-1)) and (v5.id~=JobId)) then table.insert(v1,1,v5.id);end end end if ( #v1>0) then game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,v1[math.random(1, #v1)],game.Players.LocalPlayer);else return Notification(1,"SmellLikehacker Hub","Couldn't find a server",10);end end end;
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/DevSoGod/MyScript/main/library"))()
local Window = library:CreateWindow("SmellLikeHacker | ".."Sol's RNG".." | V1")
local Tab = Window:CreateTab("Main")
local Sector = Tab:CreateSector("Section1", "left")
Sector:AddToggle("Auto Collect Items", false, function(t)
    _G.AutoFarm = t
end)
Sector:AddToggle("Auto Turn AutoRoll (GamePass)", false, function(t)
    _G.AutoRoll = t
end)
Sector:AddToggle("ESP Items", false, function(t)
    _G.ESP = t
end)
Sector:AddToggle("SpinBiome", false, function(t)
    _G.SpinBiome = t
end)
Sector:AddToggle("Claim Gear Basing", false, function(t)
    _G.Basing = t
end)

local RecalDis = 5
local currpath = game:GetService("PathfindingService"):CreatePath({["WaypointSpacing"] = 5})
local ClosestPlr
local InitialPosition
local WalkToObject
local function getClosestwalk()
    local dist, thing = math.huge
    for i, v in next, workspace.DroppedItems:GetChildren() do
        if v.ClassName == "Part" or v.ClassName == "UnionOperation" then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if mag < dist then
                dist = mag 
                thing = v
            end
        elseif v.ClassName == "Model" then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.WorldPivot.Position).magnitude
            if mag < dist then
                dist = mag 
                thing = v:FindFirstChildOfClass("Part")
            end
        end
    end
return thing
end
WalkToObject = function()
	if ClosestPlr and ClosestPlr then
		local CRoot = ClosestPlr
		if CRoot then
			InitialPosition = CRoot.Position
			local success, errorMessage = pcall(function()
				currpath:ComputeAsync(game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position, CRoot.Position)
			end)
			if success and currpath.Status == Enum.PathStatus.Success then
				for i, wap in pairs(currpath:GetWaypoints()) do
					if i == 1 then continue end
					if not ClosestPlr or not ClosestPlr or ClosestPlr ~= getClosestwalk() then
						ClosestPlr = nil
						return
					elseif (InitialPosition - CRoot.Position).Magnitude > RecalDis  then
						WalkToObject()
						return
					end
					if wap.Action == Enum.PathWaypointAction.Jump and game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid") and game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Jump == false then
						game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
					end
					if game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid") then
						game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):MoveTo(wap.Position)
						game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").MoveToFinished:Wait()
					end
				end
			end
		end
	end
end
local function WalkToPlr()
	ClosestPlr = getClosestwalk()
	WalkToObject(ClosestPlr)
end

spawn(function()
    pcall(function()
        while wait() do
            if _G.AutoFarm then
                pcall(function()
                    WalkToPlr()
                end)
            end
        end
    end)
end)
spawn(function() 
    pcall(function()
        while wait() do
            if _G.AutoFarm then
                pcall(function()
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "F", false, game.Players.LocalPlayer)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "F", false, game.Players.LocalPlayer)
                    wait()
                end)
            end
        end
    end)
end)
spawn(function() 
    pcall(function()
        while wait() do
            if _G.AutoRoll then
                pcall(function()
                    if game:GetService("Players").LocalPlayer.PlayerGui.MainInterface.AutoRoll.Context.Text ~= "Auto roll : ON" then
                        game:GetService("GuiService").SelectedObject = game:GetService("Players").LocalPlayer.PlayerGui.MainInterface.AutoRoll
                        if game:GetService("GuiService").SelectedObject == game:GetService("Players").LocalPlayer.PlayerGui.MainInterface.AutoRoll then
                            wait(1)
                            game:GetService("VirtualInputManager"):SendKeyEvent(true, 13, false, game.Players.LocalPlayer)
                            game:GetService("VirtualInputManager"):SendKeyEvent(false, 13, false, game.Players.LocalPlayer)
                            wait()
                        end
                        game:GetService("GuiService").SelectedObject = nil
                    end
                end)
            end
        end
    end)
end)
_G.stuckamt = 0
task.spawn(function()
	while task.wait(0.5) do
		if game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid") then
			if game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").MoveDirection.Magnitude == 0 then
				if _G.stuckamt == 5 then
					game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
					_G.stuckamt = 0
				elseif _G.stuckamt >= 10 then
					WalkToPlr()
					_G.stuckamt = 0
				end
			end
		end
	end
end)

spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if game:GetService("Players").LocalPlayer.PlayerGui.BeforePlaying.LoadingFrame.Start.Visible == true then
                    game:GetService("GuiService").SelectedObject = game:GetService("Players").LocalPlayer.PlayerGui.BeforePlaying.LoadingFrame.Start
                    if game:GetService("GuiService").SelectedObject == game:GetService("Players").LocalPlayer.PlayerGui.BeforePlaying.LoadingFrame.Start then
                        wait(1)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, 13, false, game.Players.LocalPlayer)
                        game:GetService("VirtualInputManager"):SendKeyEvent(false, 13, false, game.Players.LocalPlayer)
                        wait()
                    end
                    game:GetService("GuiService").SelectedObject = nil
                end
            end)
        end
    end)
end)
spawn(function() 
    pcall(function()
        while wait() do
            if _G.ESP then
                pcall(function()
                    for i, v in next, workspace.DroppedItems:GetChildren() do
                        if v.ClassName == "Part" or v.ClassName == "UnionOperation" and not v:FindFirstChildOfClass("BillboardGui") then
                            local BillboardGui = Instance.new("BillboardGui")
                            local TextLabel = Instance.new("TextLabel")
                            BillboardGui.Parent = v
                            BillboardGui.AlwaysOnTop = true
                            BillboardGui.Size = UDim2.new(0, 50, 0, 50)
                            BillboardGui.StudsOffset = Vector3.new(0, 2, 0)
                            TextLabel.Parent = BillboardGui
                            TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel.BackgroundTransparency = 1
                            TextLabel.Size = UDim2.new(1, 0, 1, 0)
                            TextLabel.Text = v.Name
                            TextLabel.TextColor3 = Color3.new(1, 0, 0)
                            TextLabel.TextScaled = true
                        elseif v.ClassName == "Model" and not v:FindFirstChildOfClass("BillboardGui") then
                            local BillboardGui = Instance.new("BillboardGui")
                            local TextLabel = Instance.new("TextLabel")
                            BillboardGui.Parent = v:FindFirstChildOfClass("Part")
                            BillboardGui.AlwaysOnTop = true
                            BillboardGui.Size = UDim2.new(0, 50, 0, 50)
                            BillboardGui.StudsOffset = Vector3.new(0, 2, 0)
                            TextLabel.Parent = BillboardGui
                            TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel.BackgroundTransparency = 1
                            TextLabel.Size = UDim2.new(1, 0, 1, 0)
                            TextLabel.Text = v.Name
                            TextLabel.TextColor3 = Color3.new(1, 0, 0)
                            TextLabel.TextScaled = true
                        end
                    end
                end)
            end
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if _G.SpinBiome then
                    for i,v in pairs({'Biome Randomizer','Strange Controller'}) do
                        if game:GetService("Players").LocalPlayer.PlayerGui.MainInterface.CurrentTime.Weather.Text == "[ Normal ]" then
                            local args = {
                                [1] = v,
                                [2] = 1
                            }
                            game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Inventory"):WaitForChild("UseItem"):FireServer(unpack(args))
                            wait(5)
                        end
                    end
                end
            end)
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if _G.Basing then
                    a = game:GetService("Players").LocalPlayer.PlayerGui.MainInterface.ShopFrame.InnerFrame["Gear Basing_Ingredients"]
                    if a.Common.Completed.Visible == true and a.Uncommon.Completed.Visible == true and a.Rare.Completed.Visible == true and a.Good.Completed.Visible == true then
                        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainInterface.RemoteFunction:GetChildren()) do
                            if string.find(v.Name,"Craft") and string.find(v.Name,"Client") then
                                v:FireServer("Craft","Gear Basing")
                                wait(1)
                            end
                        end
                    end
                end
            end)
        end
    end)
end)






















local Tab = Window:CreateTab("Misc")
local Sector = Tab:CreateSector("Section1", "left")
Sector:AddToggle("Stat Gui", true, function(t)
    game:GetService("CoreGui").StatBySmell.Enabled = t
end)
Sector:AddToggle("Credit Gui", true, function(t)
    game:GetService("CoreGui").Credit.Enabled  = t
end)
Sector:AddToggle("InstantProximityPrompt", false, function(o)
    _G.InstantProximityPrompt = o
end)
game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
    if _G.InstantProximityPrompt == true then
        prompt.HoldDuration = 0
    end
end)
Sector:AddButton("Rejoin" , function()
    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
end)
Sector:AddButton("ResetCamera" , function()
    game:GetService("Workspace").CurrentCamera:Destroy()
    wait(.1)
    game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players").LocalPlayer.Character.Humanoid
    game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
    game:GetService("Players").LocalPlayer.CameraMinZoomDistance = .5
    game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = 100000
    game:GetService("Players").LocalPlayer.CameraMode = "Classic"
end)
local Sector = Tab:CreateSector("Section2", "Right")
Sector:AddKeybind("Keybind GUI", "Insert",true, function()
    for i, v in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if v:FindFirstChild("main") then
            v.main.Visible = not v.main.Visible;
        end
    end
end)
Sector:AddToggle("CloseGuiAfterExecute", false, function(o)
    _G.CloseGuiAfterExecute = o
end)
Sector:AddToggle("RejoinAfterKick", false, function(o)
    _G.rejoinKick = o
end)
spawn(function()
    getgenv().rejoin = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(Kick)
        if ((Kick.Name == "ErrorPrompt") and Kick:FindFirstChild("MessageArea") and Kick.MessageArea:FindFirstChild("ErrorFrame")) then
            if _G.rejoinKick == true then
                game:GetService("TeleportService"):Teleport(game.PlaceId)
            end
        end
    end)
end)
Sector:AddToggle("WhiteScreen", false, function(o)
    game:GetService("RunService"):Set3dRenderingEnabled(not o);
end)
Sector:AddButton("infiniteyield" , function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)
Sector:AddButton("DarkDex" , function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua", true))()
end)
Sector:AddButton("RemoteSpy" , function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/DevSoGod/All/main/RemoteSpy", true))()
end)
spawn(function()
    pcall(function()
        while task.wait() do
            pcall(function()
                game:GetService("Players").LocalPlayer.DevCameraOcclusionMode = "Invisicam"
                game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = 100000
            end)
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if _G.CloseGuiAfterExecute then
                    pcall(function()
                        wait()
                        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetChildren()) do
                            if v:FindFirstChild("main") then
                                v.main.Visible = not v.main.Visible
                            end
                        end
                        wait(9e9)
                    end)
                end
            end)
        end
    end)
end)
game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
library:ConfigSystem("Sol"):Load()
while wait(1) do
    pcall(function()
        library:ConfigSystem("Sol"):Save()
    end)
end
